CREATE TABLE `CAMERA` (
	`UIDCAMERA` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`NAME` text NOT NULL,
	`NOTES` text
);
--> statement-breakpoint
CREATE TABLE `FILM` (
	`UIDFILM` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`NAME` text NOT NULL,
	`ISO` integer NOT NULL,
	`EXPOSURES` integer NOT NULL,
	`EXPIRATION` integer NOT NULL,
	`DEVELOPEDAT` integer NOT NULL,
	`STATUS` integer NOT NULL
);
--> statement-breakpoint
CREATE TABLE `FILMLOG` (
	`UIDLOG` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`SHUTTERSPEED` integer NOT NULL,
	`APERTURE` real NOT NULL,
	`NOTES` text,
	`TIMESTAMP` integer NOT NULL,
	`DIGITALPHOTO` blob,
	`FILMPHOTO` blob,
	`UIDLENS` integer NOT NULL,
	`UIDFILMSESSION` integer NOT NULL,
	FOREIGN KEY (`UIDLENS`) REFERENCES `LENS`(`UIDLENS`) ON UPDATE no action ON DELETE no action,
	FOREIGN KEY (`UIDFILMSESSION`) REFERENCES `FILMSESSION`(`UIDFILMSESSION`) ON UPDATE no action ON DELETE no action
);
--> statement-breakpoint
CREATE TABLE `FILMSESSION` (
	`UIDFILMSESSION` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`ACTIVE` integer NOT NULL,
	`NOTES` text,
	`UIDFILM` integer NOT NULL,
	`UIDCAMERA` integer NOT NULL,
	FOREIGN KEY (`UIDFILM`) REFERENCES `FILM`(`UIDFILM`) ON UPDATE no action ON DELETE no action,
	FOREIGN KEY (`UIDCAMERA`) REFERENCES `CAMERA`(`UIDCAMERA`) ON UPDATE no action ON DELETE no action
);
--> statement-breakpoint
CREATE TABLE `LENS` (
	`UIDLENS` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`NAME` text NOT NULL,
	`NOTES` text
);
